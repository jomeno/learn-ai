# Import necessary libraries
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix

# Sample data (replace with your own dataset)
X = np.array([[100, 1], [200, 0], [150, 1], [300, 0], [120, 1]])  # Features: transaction amount, transaction type (1 for fraudulent, 0 for legitimate)
y = np.array([1, 0, 1, 0, 1])  # Labels: 1 for fraudulent, 0 for legitimate

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Logistic Regression object
model = LogisticRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test data
predictions = model.predict(X_test)

# Calculate accuracy
accuracy = accuracy_score(y_test, predictions)
print("Accuracy:", accuracy)

# Confusion matrix
conf_matrix = confusion_matrix(y_test, predictions)
print("Confusion Matrix:")
print(conf_matrix)
